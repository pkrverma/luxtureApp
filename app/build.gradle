import java.util.Properties

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
if (rootProject.file("local.properties").exists()) {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
}

android {
    namespace 'in.kay.luxture'
    compileSdk 34

    defaultConfig {
        applicationId "in.kay.luxture"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        
        resValue "string", "google_api_key", localProperties.getProperty("API_KEY", "")

        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            )
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.4" // or latest stable
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    // Core
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.2'
    implementation 'com.google.firebase:firebase-firestore-ktx:25.1.3'

    // Compose
    def compose_version = "1.5.4"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version" // âœ… ADDED
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.activity:activity-compose:1.8.0"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // ConstraintLayout for Compose
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Hilt
    def hilt_version = "2.48"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0-alpha01"

    // Retrofit + OkHttp
    def retrofitVersion = "2.9.0"
    def okHttpVersion = "4.11.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // Accompanist
    def accompanist_version = "0.31.5-beta"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation "com.google.accompanist:accompanist-webview:$accompanist_version"

    // Coil
    def coil_version = "2.4.0"
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // Navigation Compose
    def nav_version = "2.7.4"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Telegram Bot SDK (Optional)
    implementation 'io.github.kotlin-telegram-bot.kotlin-telegram-bot:telegram:6.0.7'

    // Razorpay
    implementation 'com.razorpay:checkout:1.6.40'

    // Palette
    implementation "androidx.palette:palette-ktx:1.0.0"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Google Sign-In
    implementation 'com.google.android.gms:play-services-auth:21.0.0'

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// After evaluating the project, replace the placeholder in google-services.json
afterEvaluate {
    // Task to replace the placeholder in google-services.json
    tasks.named("processDebugGoogleServices") {
        doFirst {
            def googleServicesFile = file("src/main/google-services.json")
            if (googleServicesFile.exists()) {
                String content = googleServicesFile.getText('UTF-8')
                String apiKey = localProperties.getProperty('API_KEY', '')
                content = content.replace('${API_KEY_PLACEHOLDER}', apiKey)
                googleServicesFile.write(content, 'UTF-8')
            }
        }
    }
}
